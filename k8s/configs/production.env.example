##################################################
### Production environment for kubernetes      ###
###                                            ###
### This file holds environment variable defs  ###
### that are passed to the kubernetes pod      ###
### on the production cluster.                 ###
###                                            ###
##################################################

# Defines the intervals at which the in memory data should be
# written to the database. Higher values mean less database load,
# lower values mean more protection against data loss
FLUSH_INTERVAL=600

# Defines a list of telegram users/groups that have advanced
# capabilities and may control the behaviour of the bot. Also,
# every user/group listed here will be pinged every time the
# bot is started.
#
# Separate values with a colon (":"), e.g. 12345:23456:34567
ADMIN_USERS=-158723954

# Define the persistence layer to use for the bot. Valid values
# are
# - mysql
# - sqlite
#
# Depending on what value you use here you need to fill in further
# configuration secrets here and in ../secrets/prod.secrets based
# on your choice here.
PERSISTENCE=mysql

# If your choice for PERSISTENCE was "sqlite", then you can specify
# the path to the sqlite database file using this variable. Notice
# that the path will be accessed from inside the docker container,
# so most likely you'll want to put a path to a file on a volume here,
# such as inside /db/
SQLITE_DB_PATH=/app/db/sqlite/prod.db

# Path to the database migration files that will be used for migration
# every time the container starts. Notice that the path will be accessed
# from inside the docker container. Also note that depending on your choice
# for PERSISTENCE the path to the migration files differs. The default should
# usually be fine.
MIGRATIONS_DIR=/app/db/migrations/mysql/

# Specify the timezone that the bot should run in. Set this to the timezone
# in which your users will be. For a list of possible values please consult
# https://en.wikipedia.org/wiki/List_of_tz_database_time_zones and look for
# the values in the table column "TZ"
TIMEZONE=Europe/Berlin
