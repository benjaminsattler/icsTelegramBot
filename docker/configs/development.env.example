##################################################
### Development variables for kubernetes       ###
###                                            ###
### This file holds environment variable defs  ###
### that are passed to the kubernetes pod      ###
### on the local development cluster.          ###
###                                            ###
##################################################

# Telegram bot token to use to connect to the telegram API
# You retrieve this by talking to the bot "Botfather"
BOT_TOKEN=111111111:aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa

# Set the flag to 1 to enable debugging. This will cause
# rdebug to be launched inside the pod, which will pause
# execution until a debugger connects to it. You may connect
# to the debugger by connecting to port 31234 on the kubernetes
# node, e.g. localhost:31234
ENABLE_DEBUG=0

# Defines a list of telegram users/groups that have advanced
# capabilities and may control the behaviour of the bot. Also,
# every user/group listed here will be pinged every time the
# bot is started.
#
# Separate values with a colon (":"), e.g.
# ADMIN_USERS=12345:23456:34567
ADMIN_USERS=111111111

# Define the persistence layer to use for the bot. Valid values
# are
# - mysql
# - sqlite
#
# Depending on what value you use here you need to fill in further
# configuration variables based on your choice here. See below
PERSISTENCE=mysql

# If your choice for PERSISTENCE was "sqlite", then you can specify
# the path to the sqlite database file using this variable. Notice
# that the path will be accessed from inside the docker container,
# so most likely you'll want to put a path to a file on a volume here,
# such as inside /db/
SQLITE_DB_PATH=/db/sqlite/dev.db

# If your choice for PERSISTENCE was "mysql", then you can specify
# the mysql server credentials in the next few environment variables.
MYSQL_HOST=mysql-devel
MYSQL_PORT=3306
MYSQL_USERNAME=root
MYSQL_PASSWORD=example
MYSQL_DATABASE=icstelegrambot

# Path to the database migration files that will be used for migration
# every time the container starts. Notice that the path will be accessed
# from inside the docker container. Also note that depending on your choice
# for PERSISTENCE the path to the migration files differs. The default should
# usually be fine.
MIGRATIONS_DIR=/db/migrations/mysql/

# Specify the database connection string for the mgiration tool "dbmate".
# This is listed separately for security reasons (migrations need to alter
# database schemas, and the bot should not have these kinds of permissions).
# Also note that this environment variable will be used inside a docker
# container that is not deployed to kubernetes and is attached to the
# kubernetes node using docker's host network. The MySQL database is available
# on the kubernetes node on port 31235.
#
# For more information on how this database string needs to look like, please
# refer to the dbmate manual at https://github.com/amacneil/dbmate
DATABASE_URL=mysql://root:example@host.docker.internal:31235/icstelegrambot

# Specify the timezone that the bot should run in. Set this to the timezone
# in which your users will be. For a list of possible values please consult
# https://en.wikipedia.org/wiki/List_of_tz_database_time_zones and look for
# the values in the table column "TZ"
TIMEZONE=Europe/Berlin

# Specify which log engines to use. Separate multiple values with a colon (:)
# Supported values are
#
# GoogleCloudLogger
# StdoutLogger
LOGGERS=StdoutLogger

# If you choose GoogleCloudLogger, you can configure which
# google cloud project to associate with logs sent from
# this project
GOOGLECLOUDLOGGER_PROJECT=your_google_cloud_project

# If you choose GoogleCloudLogger, you can configure which
# google cloud logname to associate with logs sent from
# this project
GOOGLECLOUDLOGGER_LOGNAME=your_log_name

# If you choose GoogleCloudLogger, you can configure which
# google cloud resource type to associate with logs sent from
# this project
GOOGLECLOUDLOGGER_RESOURCE_TYPE=your_resource_type
#
# Put the credentials for retrieving ics files from AWS S3
AWS_REGION=aws-location
AWS_S3_BUCKET=bucket_name
AWS_ACCESS_KEY_ID=your_access_key_id
AWS_SECRET_ACCESS_KEY=your_secret_access_key
